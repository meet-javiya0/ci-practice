name: Servas CI

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Setup PHP v8.3
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.3"

      - name: Remove composer.lock file
        run: rm composer.lock

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies using compose
        run: composer install
        env:
          COMPOSER_NO_INTERACTION: 1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "npm"

      - name: Install npm packages
        run: npm install

      - name: add eslint
        run: npm install eslint --save-dev && npm install @babel/eslint-parser @eslint/eslintrc eslint-config-standard --save-dev

      - name: run lint checking
        run: npm run lint:fix

      - name: Build app using npm
        run: npm run build

      # - name: Copy .env
      #   run: cp .env.example .env

      - name: Generate app key
        run: php artisan key:generate

      # check
      # - name: Run database migrations
      #   run: php artisan migrate

      - name: Run tests
        run: ./vendor/bin/pest

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}
