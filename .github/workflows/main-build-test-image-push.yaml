name: Servas CI

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

env:
  DB_CONNECTION: sqlite
  DB_DATABASE: database/database.sqlite
  DB_FOREIGN_KEYS: true

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Setup PHP v8.3
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.3"

      - name: Remove composer.lock file
        run: rm composer.lock

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}

      - name: Install dependencies using compose
        run: composer install
        env:
          COMPOSER_NO_INTERACTION: 1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "npm"

      # - name: Cache npm dependencies
      #   uses: actions/cache@v4
      #   with:
      #     path: ~/.npm
      #     key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      #     restore-keys: |
      #       ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Install npm packages
        run: npm install

      - name: Build app using npm
        run: npm run build

      - name: Copy .env
        run: cp .env.example .env

      - name: Generate app key
        run: php artisan key:generate

      - name: Create SQLite database file
        run: |
          mkdir -p database
          touch database/database.sqlite

      - name: Run tests
        run: ./vendor/bin/pest

  docker:
    name: Build and Push Docker Image
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker metadata
        if: (github.event_name == 'push' && github.ref == 'refs/heads/main')
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.DOCKER_USERNAME }}/servas
          tags: |
            type=raw,value={{branch}}-{{sha}}-{{date 'X'}}

      - name: Login to Docker Hub
        if: (github.event_name == 'push' && github.ref == 'refs/heads/main')
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile') }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main'}}
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
